
.. currentmodule:: gxp.plugins

:class:`gxp.plugins.AddLayers`
================================================================================


.. cssclass:: meta


Extends
    * `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_
    
    * :class:`gxp.plugins.Tool`





ptype
    ``gxp_addlayers``



.. class:: AddLayers(config)

  Plugin for removing a selected layer from the map.
  TODO Make this plural - selected layers


    


Config Options
--------------

Configuration properties in addition to
those listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. describe:: actions

    ``Array`` Custom actions for tools that do not provide their own. Array
    elements are expected to be valid Ext config objects. Actions provided
    here may have an additional ``menuText`` property, which will be used
    as text when the action is used in a menu. The ``text`` property will
    only be used in buttons. Optional, only needed to create custom
    actions.

.. describe:: actionTarget

    ``Object`` or ``String`` or ``Array`` Where to place the tool's actions
    (e.g. buttons or menus)?
    
    In case of a string, this can be any string that references an
    ``Ext.Container`` property on the portal, or a unique id configured on a
    component.
    
    In case of an object, the object has a "target" and an "index" property,
    so that the tool can be inserted at a specified index in the target.
    
    actionTarget can also be an array of strings or objects, if the action is
    to be put in more than one place (e.g. a button and a context menu item).
    
    To reference one of the toolbars of an ``Ext.Panel``, ".tbar", ".bbar" or
    ".fbar" has to be appended. The default is "map.tbar". The viewer's main
    MapPanel can always be accessed with "map" as actionTarget. Set to null if
    no actions should be created.
    
    Some tools provide a context menu. To reference this context menu as
    actionTarget for other tools, configure an id in the tool's
    outputConfig, and use the id with ".contextMenu" appended. In the
    snippet below, a layer tree is created, with a "Remove layer" action
    as button on the tree's top toolbar, and as menu item in its context
    menu:
    
    .. code-block:: javascript
    
       {
           xtype: "gxp_layertree",
           outputConfig: {
               id: "tree",
               tbar: []
           }
       }, {
           xtype: "gxp_removelayer",
           actionTarget: ["tree.tbar", "tree.contextMenu"]
       }
    
    If a tool has both actions and output, and you want to force it to
    immediately output to a container, set actionTarget to null. If you
    want to hide the actions, set actionTarget to false. In this case, you
    should configure a defaultAction to make sure that an action is active.

.. describe:: addActionTip

    ``String``
    Text for add action tooltip (i18n).

.. describe:: addButtonText

    ``String``
    Text for add layers button (i18n).

.. describe:: addLayerSourceErrorText

    ``String``
    Text for an error message when WMS GetCapabilities retrieval fails (i18n).

.. describe:: addMenuText

    ``String``
    Text for add menu item (i18n).

.. describe:: addServerText

    ``String``
    Text for add server button (i18n).

.. describe:: autoActivate

    ``Boolean`` Set to false if the tool should be initialized without
    activating it. Default is true.

.. describe:: availableLayersText

    ``String``
    Text for the layer selection (i18n).

.. describe:: controlOptions

    ``Object`` If this tool is associated with an ``OpenLayers.Control``
    then this is an optional object to pass to the constructor of the
    associated ``OpenLayers.Control``.

.. describe:: createExpander

    ``Function`` Returns an ``Ext.grid.RowExpander``. Can be overridden
    by applications/subclasses to provide a custom expander.

.. describe:: defaultAction

    ``Number`` Optional index of an action that should be active by
    default. Only works for actions that are a ``GeoExt.Action`` instance.

.. describe:: doneText

    ``String``
    Text for Done button (i18n).

.. describe:: nonUploadSources

    ``Array``
    If ``upload`` is enabled, the upload button will not be displayed for
    sources whose identifiers or URLs are in the provided array.  By
    default, the upload button will make an effort to be shown for all
    sources with a url property.

.. describe:: outputAction

    ``Number`` The ``actions`` array index of the action that should
    trigger this tool's output. Only valid if ``actions`` is configured.
    Leave this unconfigured if none of the ``actions`` should trigger this
    tool's output.

.. describe:: outputConfig

    ``Object`` Optional configuration for the output container. This may
    be useful to override the xtype (e.g. "window" instead of "gx_popup"),
    or to provide layout configurations when rendering to an
    ``outputTarget``.

.. describe:: outputTarget

    ``String`` Where to add the tool's output container? This can be any
    string that references an ``Ext.Container`` property on the portal, or
    "map" to access the viewer's main map. If not provided, a window will
    be created.

.. describe:: relativeUploadOnly

    ``Boolean``
    If ``upload`` is enabled, only show the button for sources with relative
    URLs (e.g. "/geoserver").  Default is ``true``.

.. describe:: startSourceId

    ``Integer``
    The identifier of the source that we should start with.

.. describe:: toggleGroup

    ``String`` If this tool should be radio-button style toggled with other
    tools, this string is to identify the toggle group.

.. describe:: untitledText

    ``String``
    Text for an untitled layer (i18n).

.. describe:: upload

    ``Object | Boolean``
    If provided, a :class:`gxp.LayerUploadPanel` will be made accessible
    from a button on the Available Layers dialog.  This panel will be
    constructed using the provided config.  By default, no upload
    functionality is provided.

.. describe:: uploadText

    ``String``
    Text for upload button (only renders if ``upload`` is provided).




Public Properties
-----------------

Public properties in addition to those
listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. attribute:: AddLayers.active

    ``Boolean`` Is the tool currently active?




Public Methods
--------------

Public methods in addition to those
listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. method:: AddLayers.activate

    :returns: ``Boolean`` true when this tool was activated
    
    Activates this tool.

.. method:: AddLayers.addActions

    

.. method:: AddLayers.addOutput

    

.. method:: AddLayers.deactivate

    :returns: ``Boolean`` true when this tool was deactivated
    
    Deactivates this tool.

.. method:: AddLayers.removeOutput

    Removes all output created by this tool

.. method:: AddLayers.showCapabilitiesGrid

    Shows the window with a capabilities grid.




Events
------

Events in addition to those
listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. describe:: activate

    Fired when the tool is activated.
    
    Listener arguments:
    * tool - :class:`gxp.plugins.Tool` the activated tool

.. describe:: deactivate

    Fired when the tool is deactivated.
    
    Listener arguments:
    * tool - :class:`gxp.plugins.Tool` the deactivated tool

.. describe:: sourceselected

    Fired when a new source is selected.
    
    Listener arguments:
    
    * tool - :class:`gxp.plugins.AddLayers` This tool.
    * source - :class:`gxp.plugins.LayerSource` The selected source.



