
.. currentmodule:: gxp.plugins

:class:`gxp.plugins.FeatureGrid`
================================================================================


.. cssclass:: meta


Extends
    * `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_
    
    * :class:`gxp.plugins.Tool`





ptype
    ``gxp_featuregrid``



.. class:: FeatureGrid(config)

  Plugin for displaying vector features in a grid. Requires a
  :class:`gxp.plugins.FeatureManager`.


    


Config Options
--------------

Configuration properties in addition to
those listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. describe:: actions

    ``Array`` Custom actions for tools that do not provide their own. Array
    elements are expected to be valid Ext config objects. Actions provided
    here may have an additional ``menuText`` property, which will be used
    as text when the action is used in a menu. The ``text`` property will
    only be used in buttons. Optional, only needed to create custom
    actions.

.. describe:: actionTarget

    ``Object`` or ``String`` or ``Array`` Where to place the tool's actions
    (e.g. buttons or menus)?
    
    In case of a string, this can be any string that references an
    ``Ext.Container`` property on the portal, or a unique id configured on a
    component.
    
    In case of an object, the object has a "target" and an "index" property,
    so that the tool can be inserted at a specified index in the target.
    
    actionTarget can also be an array of strings or objects, if the action is
    to be put in more than one place (e.g. a button and a context menu item).
    
    To reference one of the toolbars of an ``Ext.Panel``, ".tbar", ".bbar" or
    ".fbar" has to be appended. The default is "map.tbar". The viewer's main
    MapPanel can always be accessed with "map" as actionTarget. Set to null if
    no actions should be created.
    
    If a tool has both actions as well as output, and you want to force
    it to output to a container, set actionTarget to null.

.. describe:: alwaysDisplayOnMap

    ``Boolean`` If set to true, the features that are shown in the grid
    will always be displayed on the map, and there will be no "Display on
    map" button in the toolbar. Default is false.

.. describe:: autoActivate

    ``Boolean`` Set to false if the tool should be initialized without
    activating it. Default is true.

.. describe:: autoCollapse

    ``Boolean`` If set to true, and when this tool's output is added to a
    container that can be collapsed, it will be collapsed when no features
    are to be displayed. Default is false.

.. describe:: autoExpand

    ``Boolean`` If set to true, and when this tool's output is added to a
    container that can be expanded, it will be expanded when features are
    loaded. Default is false.

.. describe:: controlOptions

    ``Object`` If this tool is associated with an ``OpenLayers.Control``
    then this is an optional object to pass to the constructor of the
    associated ``OpenLayers.Control``.

.. describe:: defaultAction

    ``Number`` Optional index of an action that should be active by
    default. Only works for actions that are a ``GeoExt.Action`` instance.

.. describe:: displayFeatureText

    ``String``
    Text for feature display button (i18n).

.. describe:: featureManager

    ``String`` The id of the :class:`gxp.plugins.FeatureManager` to use
    with this tool.

.. describe:: lastPageTip

    ``String``
    Tooltip string for last page action (i18n).

.. describe:: nextPageTip

    ``String``
    Tooltip string for next page action (i18n).

.. describe:: outputAction

    ``Number`` The ``actions`` array index of the action that should
    trigger this tool's output. Only valid if ``actions`` is configured.
    Leave this unconfigured if none of the ``actions`` should trigger this
    tool's output.

.. describe:: outputConfig

    ``Object`` Optional configuration for the output container. This may
    be useful to override the xtype (e.g. "window" instead of "gx_popup"),
    or to provide layout configurations when rendering to an
    ``outputTarget``.

.. describe:: outputTarget

    ``String`` Where to add the tool's output container? This can be any
    string that references an ``Ext.Container`` property on the portal, or
    "map" to access the viewer's main map. If not provided, a window will
    be created.

.. describe:: previousPageTip

    ``String``
    Tooltip string for previous page action (i18n).

.. describe:: selectOnMap

    ``Boolean`` If set to true, features can not only be selected on the
    grid, but also on the map, and multi-selection will be enabled. Only
    set to true when no feature editor or feature info tool is used with
    the underlying feature manager. Default is false.

.. describe:: toggleGroup

    ``String`` If this tool should be radio-button style toggled with other
    tools, this string is to identify the toggle group.

.. describe:: zoomFirstPageTip

    ``String``
    Tooltip string for zoom to page extent action (i18n).




Public Properties
-----------------

Public properties in addition to those
listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. attribute:: FeatureGrid.active

    ``Boolean`` Is the tool currently active?




Public Methods
--------------

Public methods in addition to those
listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. method:: FeatureGrid.activate

    :returns: ``Boolean`` true when this tool was activated
    
    Activates this tool.

.. method:: FeatureGrid.addActions

    :arg actions: ``Array`` Optional actions to add. If not provided,
        this.actions will be added.
    :returns: ``Array`` The actions added.

.. method:: FeatureGrid.addOutput

    

.. method:: FeatureGrid.deactivate

    :returns: ``Boolean`` true when this tool was deactivated
    
    Deactivates this tool.




Events
------

Events in addition to those
listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. describe:: activate

    Fired when the tool is activated.
    
    Listener arguments:
    * tool - :class:`gxp.plugins.Tool` the activated tool

.. describe:: deactivate

    Fired when the tool is deactivated.
    
    Listener arguments:
    * tool - :class:`gxp.plugins.Tool` the deactivated tool



