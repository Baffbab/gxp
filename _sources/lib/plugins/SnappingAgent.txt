
.. currentmodule:: gxp.plugins

:class:`gxp.plugins.SnappingAgent`
================================================================================


.. cssclass:: meta


Extends
    * `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_
    
    * :class:`gxp.plugins.Tool`





ptype
    ``gxp_snappingagent``



.. class:: SnappingAgent(config)

  Plugin for managing snapping while editing.


    


Config Options
--------------

Configuration properties in addition to
those listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. describe:: actions

    ``Array`` Custom actions for tools that do not provide their own. Array
    elements are expected to be valid Ext config objects. Actions provided
    here may have an additional ``menuText`` property, which will be used
    as text when the action is used in a menu. The ``text`` property will
    only be used in buttons. Optional, only needed to create custom
    actions.

.. describe:: actionTarget

    ``Object`` or ``String`` or ``Array`` Where to place the tool's actions
    (e.g. buttons or menus)?
    
    In case of a string, this can be any string that references an
    ``Ext.Container`` property on the portal, or a unique id configured on a
    component.
    
    In case of an object, the object has a "target" and an "index" property,
    so that the tool can be inserted at a specified index in the target.
    
    actionTarget can also be an array of strings or objects, if the action is
    to be put in more than one place (e.g. a button and a context menu item).
    
    To reference one of the toolbars of an ``Ext.Panel``, ".tbar", ".bbar" or
    ".fbar" has to be appended. The default is "map.tbar". The viewer's main
    MapPanel can always be accessed with "map" as actionTarget. Set to null if
    no actions should be created.
    
    Some tools provide a context menu. To reference this context menu as
    actionTarget for other tools, configure an id in the tool's
    outputConfig, and use the id with ".contextMenu" appended. In the
    snippet below, a layer tree is created, with a "Remove layer" action
    as button on the tree's top toolbar, and as menu item in its context
    menu:
    
    .. code-block:: javascript
    
       {
           xtype: "gxp_layertree",
           outputConfig: {
               id: "tree",
               tbar: []
           }
       }, {
           xtype: "gxp_removelayer",
           actionTarget: ["tree.tbar", "tree.contextMenu"]
       }
    
    If a tool has both actions and output, and you want to force it to
    immediately output to a container, set actionTarget to null. If you
    want to hide the actions, set actionTarget to false. In this case, you
    should configure a defaultAction to make sure that an action is active.

.. describe:: autoActivate

    ``Boolean`` Set to false if the tool should be initialized without
    activating it. Default is true.

.. describe:: controlOptions

    ``Object`` Options for the ``OpenLayers.Control.Snapping`` used with
    this tool.

.. describe:: defaultAction

    ``Number`` Optional index of an action that should be active by
    default. Only works for actions that are a ``GeoExt.Action`` instance.

.. describe:: outputAction

    ``Number`` The ``actions`` array index of the action that should
    trigger this tool's output. Only valid if ``actions`` is configured.
    Leave this unconfigured if none of the ``actions`` should trigger this
    tool's output.

.. describe:: outputConfig

    ``Object`` Optional configuration for the output container. This may
    be useful to override the xtype (e.g. "window" instead of "gx_popup"),
    or to provide layout configurations when rendering to an
    ``outputTarget``.

.. describe:: outputTarget

    ``String`` Where to add the tool's output container? This can be any
    string that references an ``Ext.Container`` property on the portal, or
    "map" to access the viewer's main map. If not provided, a window will
    be created.

.. describe:: targets

    ``Array`` Shortcut to the targets control option of the
    ``OpenLayers.Control.Snapping`` used with this tool.

.. describe:: toggleGroup

    ``String`` If this tool should be radio-button style toggled with other
    tools, this string is to identify the toggle group.




Public Properties
-----------------

Public properties in addition to those
listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. attribute:: SnappingAgent.active

    ``Boolean`` Is the tool currently active?




Public Methods
--------------

Public methods in addition to those
listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. method:: SnappingAgent.activate

    :returns: ``Boolean`` true when this tool was activated
    
    Activates this tool.

.. method:: SnappingAgent.addActions

    :arg actions: ``Array`` Optional actions to add. If not provided,
        this.actions will be added.
    :returns: ``Array`` The actions added.

.. method:: SnappingAgent.addOutput

    :arg config: ``Object`` configuration for the ``Ext.Component`` to be
        added to the ``outputTarget``. Properties of this configuration
        will be overridden by the applications ``outputConfig`` for the
        tool instance.
    :return: ``Ext.Component`` The component added to the ``outputTarget``.
    
    Adds output to the tool's ``outputTarget``. This method is meant to be
    called and/or overridden by subclasses.

.. method:: SnappingAgent.addSnappingControl

    :arg layer: ``OpenLayers.Layer.Vector`` An editable vector layer.
    
    Prepares a snapping control for the provided layer.  All target
    configuration is derived from the configuration of this snapping agent.

.. method:: SnappingAgent.deactivate

    :returns: ``Boolean`` true when this tool was deactivated
    
    Deactivates this tool.

.. method:: SnappingAgent.removeOutput

    Removes all output created by this tool




Events
------

Events in addition to those
listed for `Ext.util.Observable <http://extjs.com/deploy/dev/docs/?class=Ext.util.Observable>`_.


.. describe:: activate

    Fired when the tool is activated.
    
    Listener arguments:
    * tool - :class:`gxp.plugins.Tool` the activated tool

.. describe:: deactivate

    Fired when the tool is deactivated.
    
    Listener arguments:
    * tool - :class:`gxp.plugins.Tool` the deactivated tool



