
.. currentmodule:: gxp.form

:class:`gxp.form.AutoCompleteComboBox`
================================================================================


.. cssclass:: meta


Extends
    * `Ext.form.ComboBox <http://extjs.com/deploy/dev/docs/?class=Ext.form.ComboBox>`_
    



xtype
    ``gxp_autocompletecombo``





.. class:: AutoCompleteComboBox(config)

Creates an autocomplete combo box that issues queries to a WFS typename.



    


Config Options
--------------

Configuration properties in addition to
those listed for `Ext.form.ComboBox <http://extjs.com/deploy/dev/docs/?class=Ext.form.ComboBox>`_.


.. describe:: customSortInfo

    ``Object``
    Providing custom sort info allows sorting of a single field value by
    multiple parts within that value.  For example, a value representing
    a street address like "1234 Main Street" would make sense to sort first
    by "Main Street" (case insensitive) and then by "1234" (as an integer).
    The ``customSortInfo`` object must contain ``matcher`` and ``parts``
    properties.
    
    The ``matcher`` value will be used to create a regular expression (with
    ``new RegExp(matcher)``).  This regular expression is assumed to have
    grouping parentheses for each part of the value to be compared.
    
    The ``parts`` value must be an array with the same length as the number
    of groups, or parts of the value to be compared.  Each item in the
    ``parts`` array may have an ``order`` property and a ``sortType``
    property.  The optional ``order`` value determines precedence for a part
    (e.g. part with order 0 will be compared before part with order 1).
    The optional ``sortType`` value must be a string matching one of the
    ``Ext.data.SortTypes`` methods (e.g. "asFloat").
    
    Example custom sort info to match addresses like "123 Main St" first by
    street name and then by number:
    
    .. code-block:: javascript
    
        customSortInfo: {
            matcher: "^(\\d+)\\s(.*)$",
            parts: [
                {order: 1, sortType: "asInt"},
                {order: 0, sortType: "asUCString"}
            ]
        }

.. describe:: fieldName

    ``String``
    The name of the field/attribute to search on. The "name" of this form
    field will also default to fieldName if not provided explicitly.









