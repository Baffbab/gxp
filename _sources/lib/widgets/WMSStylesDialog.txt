
.. currentmodule:: gxp

:class:`gxp.WMSStylesDialog`
================================================================================


.. cssclass:: meta


Extends
    * `Ext.Container <http://extjs.com/deploy/dev/docs/?class=Ext.Container>`_
    



xtype
    ``gx_wmsstylesdialog``





.. class:: WMSStylesDialog(config)

    Create a dialog for selecting and layer styles. If the WMS supports
    GetStyles, styles can also be edited. The dialog does not provide any
    means of writing modified styles back to the server. To save styles,
    configure the dialog with a :class:`gxp.plugins.StyleWriter` plugin
    and call the ``saveStyles`` method.


    


Config Options
--------------

Configuration properties in addition to
those listed for `Ext.Container <http://extjs.com/deploy/dev/docs/?class=Ext.Container>`_.


.. describe:: editable

    ``Boolean`` Set to false if styles should not be editable. Default is
    true.

.. describe:: layerDescription

    ``Object`` Array entry of a DescribeLayer response as read by
        ``OpenLayers.Format.WMSDescribeLayer``. Optional. If not provided,
        a DescribeLayer request will be issued to the WMS.

.. describe:: layerRecord

    ``GeoExt.data.LayerRecord`` The layer to edit/select styles for.

.. describe:: styleName

    ``String`` A style's name to select in the styles combo box. Optional.
    If not provided, the layer's current style will be selected.

.. describe:: stylesComboOptions

    ``Object`` configuration options to pass to the styles combo of this
    dialog. Optional.




Public Properties
-----------------

Public properties in addition to those
listed for `Ext.Container <http://extjs.com/deploy/dev/docs/?class=Ext.Container>`_.


.. attribute:: WMSStylesDialog.editable

    ``Boolean`` Read-only. True if this component could gather enough
    information to allow styles being edited, false otherwise. This is
    not supposed to be used before the  ``ready`` event is fired.

.. attribute:: WMSStylesDialog.selectedStyle

    ``Ext.data.Record`` The currently selected style from the
    ``stylesStore``.

.. attribute:: WMSStylesDialog.stylesStore

    ``Ext.data.Store`` A store representing the styles returned from
    GetCapabilities and GetStyles. It has "name", "title", "abstract",
    "legend" and "userStyle" fields. If the WMS supports GetStyles, the
    "legend" field will not be available. If it does not, the "userStyle"
    field will not be available.




Public Methods
--------------

Public methods in addition to those
listed for `Ext.Container <http://extjs.com/deploy/dev/docs/?class=Ext.Container>`_.


.. method:: WMSStylesDialog.addStyle

    Creates a new style and selects it in the styles combo.

.. method:: WMSStylesDialog.changeStyle

    :arg value: ``Ext.data.Record``
    :arg options: ``Object`` Additional options for this method.
    
    Available options:
    * updateCombo - ``Boolean`` set to true to update the combo box
    * markModified - ``Boolean`` set to true to mark the dialog modified
    
    Handler for the stylesCombo's ``select`` and the store's ``update``
    event. Updates the layer and the rules fieldset.

.. method:: WMSStylesDialog.createSLD

    :arg options: ``Object``
    :return: ``String`` The current SLD for the NamedLayer.
    
    Supported ``options``:
    
    * userStyles - ``Array(String)`` list of userStyles (by name) that are
      to be included in the SLD. By default, all will be included.

.. method:: WMSStylesDialog.editStyle

    :arg prevStyle: ``Ext.data.Record``
    
    Edit the currently selected style.

.. method:: WMSStylesDialog.saveStyles

    :arg options: ``Object`` Options to pass to the
        :class:`gxp.plugins.StyleWriter` plugin
    
    Saves the styles. Without a :class:`gxp.plugins.StyleWriter` plugin
    configured for this instance, nothing will happen.




Events
------

Events in addition to those
listed for `Ext.Container <http://extjs.com/deploy/dev/docs/?class=Ext.Container>`_.


.. describe:: beforesaved

    Fires before the styles are saved (using a
    :class:`gxp.plugins.StyleWriter` plugin)
    
    Listener arguments:
    
    * :class:`gxp.WMSStylesDialog` this component
    * ``Object`` options for the ``write`` method of the
      :class:`gxp.plugins.StyleWriter`

.. describe:: modified

    Fires on every style modification.
    
    Listener arguments:
    
    * :class:`gxp.WMSStylesDialog` this component
    * ``String`` the name of the modified style

.. describe:: ready

    Fires when this component is ready for user interaction.

.. describe:: saved

    Fires when a style was successfully saved.

.. describe:: styleselected

    Fires whenever a style is selected from this dialog's Style
    combo box.
    
    Listener arguments:
    
    * :class:`gxp.WMSStylesDialog` this component
    * ``String`` the name of the selected style



